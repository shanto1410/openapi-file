{
  "openapi": "3.0.0",
  "info": {
    "title": "GDIC API",
    "version": "1.0.0",
    "contact": {
      "name": "GDIC IT",
      "email": "itdev@green-delta.com",
      "url": "https://green-delta.com"
    }
  },
  "servers": [
    {
      "url": "https://cisdev.green-delta.com:8282",
      "description": "Production"
    },
    {
      "description": "Sandbox",
      "url": "https://cisdev.green-delta.com:8282"
    }
  ],
  "security": [
    {
      "API Key": []
    }
  ],
  "paths": {

    "/user-authentication": {
      "post": {
        "summary": "User Authentication",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserAthenticationSuccess"
          },
          "400": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        
        "security": []
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "User": {
        "description": "",
        "type": "object",
        "title": "User",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "description": "Please enter email or pf"
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "description": "Please enter password"
          },
          "dataSource": {
            "type": "string",
            "minLength": 1,
            "description": "Request platform identify"
          }
        },
        "required": [
          "username",
          "password"
        ]
      }
    },
    "securitySchemes": {
      "API Key": {
        "name": "JWT Access Token",
        "type": "JWT Access Token",
        "in": "query",
        "description": "Authentication Bearer {{ACCESS TOKEN}}"
      }
    },
    "responses": {
      "UserAthenticationSuccess": {
        "description": "User Authentication Success Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Success",
              "type": "object",
              "description": "",
              "x-tags": [
                "Common"
              ],
              "properties": {
                  "data": {
                                    "type": "object",
                                    "properties": {
                                            "result": {
                                                "type": "boolean",
                                                "description": "Result could be 'true' or 'false' "
                                            },
                                            "token": {
                                                "type": "string",
                                                "description": "JWT Access Token"
                                            },
                                             "expiredDate": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Token expire date"
                                            },
                                             "model": {
                                                "type": "array",
                                                "description": "Empty object authentication request"
                                            },
                                             "remarks": {
                                                "type": "string",
                                                "description": "Multiple remarks with comma seperator"
                                            }
                                        }
                                },
                                "messageID": {
                                    "type": "string",
                                    "description": "Unique id for every response"
                                },
                                "correlationID": {
                                    "type": "string",
                                    "description": "Unique id for asynchronous response"
                                },
                                "message": {
                                    "type": "array",
                                    "description": "Multiple messages with comma seperator"
                                },
                                 "responseCode": {
                                    "type": "string",
                                    "description": "Status code"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "response date time"
                                }
              },
              "required": [
                "result",
                "token"
              ]
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "title": "Error",
              "type": "object",
              "description": "A standard error object.",
              "x-tags": [
                "Common"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "description": "A code."
                },
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "status",
                "error"
              ]
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Action not allowed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      }
    },
    "examples": {
      "user": {
        "value": {
          "username": 1726,
          "password": "abcd1234",
          "dataSource": "core"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Todos"
    }
  ]
}
