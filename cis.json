{
  "openapi": "3.0.0",
  "info": {
    "title": "GDIC API",
    "version": "1.0.0",
    "contact": {
      "name": "GDIC IT",
      "email": "itdev@green-delta.com",
      "url": "https://green-delta.com"
    }
  },
  "servers": [
    {
      "url": "https://cisdev.green-delta.com:8282",
      "description": "Production"
    },
    {
      "description": "Sandbox",
      "url": "https://cisdev.green-delta.com:8282"
    }
  ],
  "security": [
    {
      "API Key": []
    }
  ],
  "paths": {
    "/todos": {
      "get": {
        "summary": "List Todos",
        "responses": {
          "200": {
            "description": "Returns a list of Todos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Todos"
                  }
                },
                "examples": {
                  "List of Todos": {
                    "$ref": "#/components/examples/multiple-todos"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-todos",
        "description": "Returns a list of todos\n\n*Markdown is supported in descriptions. Add information here for users to get accustomed to endpoints*",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "security": []
      },
      "post": {
        "summary": "Create Todo",
        "operationId": "post-todos",
        "responses": {
          "201": {
            "description": "New Todo Created",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Todos"
                },
                "examples": {
                  "Example Todo": {
                    "$ref": "#/components/examples/todo"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "This creates a Todo object\n\n*Markdown is supported in descriptions. Add information here for users to get accustomed to endpoints*",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todos"
              }
            }
          },
          "description": "Name of the Todo"
        },
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/todos/{id}": {
      "get": {
        "summary": "Get Todo",
        "responses": {
          "200": {
            "description": "Returns the Todo for the ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todos"
                },
                "examples": {
                  "Example Todo": {
                    "$ref": "#/components/examples/todo"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-todos-id",
        "description": "Get a single todo using an ID\n\n*Markdown is supported in descriptions. Add information here for users to get accustomed to endpoints*",
        "parameters": [],
        "security": []
      },
      "put": {
        "summary": "Replace Todo",
        "operationId": "put-todos-id",
        "responses": {
          "200": {
            "description": "Todo Updated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todos"
              }
            }
          },
          "description": ""
        },
        "description": "Update a single todo using an ID\n\n*Markdown is supported in descriptions. Add information here for users to get accustomed to endpoints*",
        "security": [
          {
            "API Key": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Todo",
        "operationId": "delete-todos-id",
        "responses": {
          "200": {
            "description": "Todo Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todos"
                },
                "examples": {
                  "Example Todo": {
                    "$ref": "#/components/examples/todo"
                  }
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Delete a todo using an ID\n\n*Markdown is supported in descriptions. Add information here for users to get accustomed to endpoints*",
        "security": [
          {
            "API Key": []
          }
        ]
      },
      "patch": {
        "summary": "Update Todo",
        "operationId": "patch-todos-id",
        "responses": {
          "200": {
            "description": "Todo Updated"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "deprecated": true,
        "description": "Don't use this endpoint. Notice it's deprecated.\n\n*Markdown is supported in descriptions. Add information here for users to get accustomed to endpoints*",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todos"
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/ID"
        }
      ]
    },
    "/users": {
      "post": {
        "summary": "User Authentication",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users",
        "description": "Get a user by ID\n\n*Markdown is supported in descriptions. Add information here for users to get accustomed to endpoints*",
        "security": []
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "User": {
        "description": "",
        "type": "object",
        "title": "User",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "description": "Please enter email or pf"
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "description": "Please enter password"
          },
          "dataSource": {
            "type": "string",
            "minLength": 1,
            "description": "Request platform identify"
          }
        },
        "required": [
          "username",
          "password"
        ]
      }
    },
    "securitySchemes": {
      "API Key": {
        "name": "JWT Access Token",
        "type": "JWT Access Token",
        "in": "query",
        "description": "Authentication Bearer {{ACCESS TOKEN}}"
      }
    },
    "parameters": {
      "username": {
        "name": "username",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Please enter email or pf"
      },
      "password": {
        "name": "password",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Please enter password"
      },
      "dataSource": {
        "name": "dataSource",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Please enter password"
      }
    },
    "responses": {
      "UserAthenticationSuccess": {
        "description": "User Authentication Success Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Success",
              "type": "object",
              "description": "",
              "x-tags": [
                "Common"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "description": "A code."
                },
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "status",
                "error"
              ]
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "title": "Error",
              "type": "object",
              "description": "A standard error object.",
              "x-tags": [
                "Common"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "description": "A code."
                },
                "error": {
                  "type": "string"
                }
              },
              "required": [
                "status",
                "error"
              ]
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Action not allowed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      }
    },
    "examples": {
      "user": {
        "value": {
          "username": 1726,
          "password": "abcd1234",
          "dataSource": "core"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Todos"
    }
  ]
}
